[{"path":[]},{"path":"https://alexym1.github.io/FactoMineR2/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://alexym1.github.io/FactoMineR2/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://alexym1.github.io/FactoMineR2/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://alexym1.github.io/FactoMineR2/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://alexym1.github.io/FactoMineR2/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement yahiaoui-martinez.alex@outlook.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://alexym1.github.io/FactoMineR2/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://alexym1.github.io/FactoMineR2/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://alexym1.github.io/FactoMineR2/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://alexym1.github.io/FactoMineR2/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://alexym1.github.io/FactoMineR2/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://alexym1.github.io/FactoMineR2/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://alexym1.github.io/FactoMineR2/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to FactoMineR2","title":"Contributing to FactoMineR2","text":"outlines propose change FactoMineR2.","code":""},{"path":"https://alexym1.github.io/FactoMineR2/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to FactoMineR2","text":"Small typos grammatical errors documentation edited directly using GitHub web interface. Please, changes made commit pull request.","code":""},{"path":"https://alexym1.github.io/FactoMineR2/CONTRIBUTING.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"Contributing to FactoMineR2","text":"make substantial pull request, always file issue make sure someone team agrees ’s problem. ’ve found bug, create associated issue illustrate bug minimal example.","code":""},{"path":"https://alexym1.github.io/FactoMineR2/CONTRIBUTING.html","id":"reports-bugs","dir":"","previous_headings":"","what":"Reports bugs","title":"Contributing to FactoMineR2","text":"Report bugs https://github.com/alexym1/FactoMineR2/issues.","code":""},{"path":"https://alexym1.github.io/FactoMineR2/CONTRIBUTING.html","id":"contribution","dir":"","previous_headings":"","what":"Contribution","title":"Contributing to FactoMineR2","text":"Clone repo Create branch latest master main branch. Set reproducible environment using renv::restore() package. Check changes, please add unit tests Run devtools::check() ensure code meets package’s standards. Fix errors, warnings notes may appear. (optional) New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. Push remote source:","code":"git clone git@github.com:alexym1/FactoMineR2.git # Run this command to validate your tests testthat::test_dir(\"tests/testthat\") git push origin <your_branch_name>"},{"path":"https://alexym1.github.io/FactoMineR2/CONTRIBUTING.html","id":"pull-request","dir":"","previous_headings":"","what":"Pull request","title":"Contributing to FactoMineR2","text":"Check unit tests package’s standards (see Contribution) user-facing changes, add bullet top NEWS.md current development version header describing changes made followed GitHub username, links relevant issue(s)/PR(s). Create pull request <your_branch_name> master main. Copy/Paste latest bullet NEWS.md PR description. Bump version following files: Description NEWS.md README.Rmd version number format x.y.z. change bug fix, update z. change enhancement, update y. change breaking change, update x. Confirm PR remove merged branch. CI files check code coverage update website.","code":"# Update the existing NEWS.md file pkgdown::build_site()"},{"path":"https://alexym1.github.io/FactoMineR2/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to FactoMineR2","text":"participating project agree abide terms.","code":""},{"path":"https://alexym1.github.io/FactoMineR2/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Alex MARTINEZ Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://alexym1.github.io/FactoMineR2/articles/Comparison.html","id":"eigs","dir":"Articles","previous_headings":"","what":"Eigs","title":"Comparison with FactoMineR","text":"","code":"# Get eigvalues and eigvectors with FactoMineR X <- decathlon[, -c(11:13)] res_pca <- PCA(X, quanti.sup = 10, ind.sup = 1, graph = FALSE) head(res_pca$eig) #>        eigenvalue percentage of variance cumulative percentage of variance #> comp 1  3.2817473              36.463859                          36.46386 #> comp 2  1.6893625              18.770694                          55.23455 #> comp 3  1.0648909              11.832121                          67.06667 #> comp 4  0.8572889               9.525432                          76.59211 #> comp 5  0.6349252               7.054725                          83.64683 #> comp 6  0.4677351               5.197057                          88.84389 # Get eigvalues and eigvectors with FactoMineR2 X_active <- X[-1, -10] X_active_scaled <- standardize(X_active, scale = TRUE)  eigs <- get_weighted_eigen(X_active_scaled)  df_eigs <- data.frame(     eigenvalue = eigs$values,     `percentage of variance` = eigs$values / sum(eigs$values) * 100,     `cumulative percentage of variance` = cumsum(eigs$values / sum(eigs$values))   )  rownames(df_eigs) <- paste0(\"comp \", 1:nrow(df_eigs))    df_eigs |> head() #>        eigenvalue percentage.of.variance cumulative.percentage.of.variance #> comp 1  3.2817473              36.463859                         0.3646386 #> comp 2  1.6893625              18.770694                         0.5523455 #> comp 3  1.0648909              11.832121                         0.6706667 #> comp 4  0.8572889               9.525432                         0.7659211 #> comp 5  0.6349252               7.054725                         0.8364683 #> comp 6  0.4677351               5.197057                         0.8884389"},{"path":[]},{"path":"https://alexym1.github.io/FactoMineR2/articles/Comparison.html","id":"individuals","dir":"Articles","previous_headings":"PCA","what":"Individuals","title":"Comparison with FactoMineR","text":"","code":"# Get principal components with FactoMineR head(res_pca$ind$coord) #>                Dim.1      Dim.2      Dim.3        Dim.4       Dim.5 #> CLAY       1.3100544 -0.4159492  0.5208056  0.369856466 -2.17766124 #> KARPOV     1.4371854 -0.4206194 -0.9485451  2.055098128 -0.08739926 #> BERNARD   -0.6048025 -1.1039234  2.2461329 -0.308551094  0.52147527 #> YURKOV    -0.5701719  2.4598460  0.6145443  0.002631539  1.26970612 #> WARNERS    0.3739047 -1.8369980 -0.4725537  0.728066088  0.69493980 #> ZSIVOCZKY  0.2692284 -0.4794763 -1.9969562 -0.258190426 -0.13749027 # Get principal components with FactoMineR2 ind_coords <- pca_ind_coords(X_active_scaled, eigs$vectors) head(ind_coords[,1:5]) #>                Dim.1      Dim.2      Dim.3        Dim.4       Dim.5 #> CLAY       1.3100544 -0.4159492  0.5208056  0.369856466 -2.17766124 #> KARPOV     1.4371854 -0.4206194 -0.9485451  2.055098128 -0.08739926 #> BERNARD   -0.6048025 -1.1039234  2.2461329 -0.308551094  0.52147527 #> YURKOV    -0.5701719  2.4598460  0.6145443  0.002631539  1.26970612 #> WARNERS    0.3739047 -1.8369980 -0.4725537  0.728066088  0.69493980 #> ZSIVOCZKY  0.2692284 -0.4794763 -1.9969562 -0.258190426 -0.13749027 # Get individual cos2 with FactoMineR head(res_pca$ind$cos2) #>                Dim.1      Dim.2      Dim.3        Dim.4       Dim.5 #> CLAY      0.20619906 0.02078684 0.03258812 1.643518e-02 0.569755684 #> KARPOV    0.25723191 0.02203321 0.11205086 5.259741e-01 0.000951294 #> BERNARD   0.04764941 0.15874795 0.65720548 1.240179e-02 0.035424009 #> YURKOV    0.03581693 0.66664184 0.04160860 7.629506e-07 0.177616436 #> WARNERS   0.02392091 0.57739535 0.03820834 9.069796e-02 0.082632386 #> ZSIVOCZKY 0.01324414 0.04200650 0.72865053 1.218043e-02 0.003454030 # Get individual cos2 with FactoMineR2 ind_cos2 <- pca_ind_cos2(ind_coords) head(ind_cos2[,1:5]) #>                Dim.1      Dim.2      Dim.3        Dim.4       Dim.5 #> CLAY      0.20619906 0.02078684 0.03258812 1.643518e-02 0.569755684 #> KARPOV    0.25723191 0.02203321 0.11205086 5.259741e-01 0.000951294 #> BERNARD   0.04764941 0.15874795 0.65720548 1.240179e-02 0.035424009 #> YURKOV    0.03581693 0.66664184 0.04160860 7.629506e-07 0.177616436 #> WARNERS   0.02392091 0.57739535 0.03820834 9.069796e-02 0.082632386 #> ZSIVOCZKY 0.01324414 0.04200650 0.72865053 1.218043e-02 0.003454030 # Get individual contributions with FactoMineR head(res_pca$ind$contrib) #>                Dim.1     Dim.2      Dim.3        Dim.4       Dim.5 #> CLAY      1.30741518 0.2560340  0.6367752 3.989140e-01 18.67231141 #> KARPOV    1.57347720 0.2618157  2.1122769 1.231623e+01  0.03007689 #> BERNARD   0.27865195 1.8034123 11.8442024 2.776304e-01  1.07074211 #> YURKOV    0.24765466 8.9543282  0.8866277 2.019447e-05  6.34780926 #> WARNERS   0.10650172 4.9938388  0.5242485 1.545804e+00  1.90156779 #> ZSIVOCZKY 0.05521748 0.3402134  9.3620727 1.943986e-01  0.07443229 # Get individual contributions with FactoMineR2 ind_contrib <- pca_ind_contrib(ind_coords, df_eigs$eigenvalue) head(ind_contrib[,1:5]) #>                Dim.1     Dim.2      Dim.3        Dim.4       Dim.5 #> CLAY      1.30741518 0.2560340  0.6367752 3.989140e-01 18.67231141 #> KARPOV    1.57347720 0.2618157  2.1122769 1.231623e+01  0.03007689 #> BERNARD   0.27865195 1.8034123 11.8442024 2.776304e-01  1.07074211 #> YURKOV    0.24765466 8.9543282  0.8866277 2.019447e-05  6.34780926 #> WARNERS   0.10650172 4.9938388  0.5242485 1.545804e+00  1.90156779 #> ZSIVOCZKY 0.05521748 0.3402134  9.3620727 1.943986e-01  0.07443229"},{"path":"https://alexym1.github.io/FactoMineR2/articles/Comparison.html","id":"supplementary-individuals","dir":"Articles","previous_headings":"PCA","what":"Supplementary individuals","title":"Comparison with FactoMineR","text":"","code":"# Get supplementary individuals with FactoMineR res_pca$ind.sup$coord #>            Dim.1     Dim.2    Dim.3     Dim.4    Dim.5 #> SEBRLE 0.8344973 0.3186264 1.214558 -0.201484 1.281883 # Get supplementary individuals with FactoMineR2 weights <- rep(1, nrow(X_active)) / nrow(X_active) center <- colMeans(X_active) std <- sqrt(as.vector(crossprod(weights, as.matrix(X_active^2)) - center^2))   X_sup <- X[1, -10] X_sup_scaled <- (X_sup - center) / std  ind_sup_coords <- X_sup_scaled |> pca_ind_coords(eigs$vectors) ind_sup_coords[,1:5] #>      Dim.1      Dim.2      Dim.3      Dim.4      Dim.5  #>  0.8344973  0.3186264  1.2145584 -0.2014840  1.2818827 # Get supplementary individuals cos2 with FactoMineR res_pca$ind.sup$cos2 #>            Dim.1      Dim.2     Dim.3       Dim.4     Dim.5 #> SEBRLE 0.1505617 0.02194968 0.3189345 0.008776992 0.3552722 # Get supplementary individuals cos2 with FactoMineR2 ind_sup_cos2 <- pca_ind_cos2(ind_sup_coords) ind_sup_cos2[,1:5] #>       Dim.1       Dim.2       Dim.3       Dim.4       Dim.5  #> 0.150561716 0.021949682 0.318934499 0.008776992 0.355272243"},{"path":"https://alexym1.github.io/FactoMineR2/articles/Comparison.html","id":"variables","dir":"Articles","previous_headings":"PCA","what":"Variables","title":"Comparison with FactoMineR","text":"","code":"# Get variable coordinates with FactoMineR head(res_pca$var$coord) #>                  Dim.1      Dim.2       Dim.3       Dim.4       Dim.5 #> 100m        -0.7802087  0.2474540 -0.07802294  0.15739065  0.10348090 #> Long.jump    0.7418925 -0.4073126  0.05696965 -0.10200465  0.12853454 #> Shot.put     0.6230146  0.5713999  0.28623659  0.22239225 -0.02547125 #> High.jump    0.5704197  0.4191676 -0.24210464  0.09178538  0.63728214 #> 400m        -0.6756524  0.4720254  0.12379407  0.12444012 -0.02216888 #> 110m.hurdle -0.7510101  0.2498147  0.23834558 -0.06295776  0.22508937 # Get variable coordinates with FactoMineR2 var_coords <- pca_var_coords(df_eigs$eigenvalue, eigs$vectors) head(var_coords[,1:5]) #>                  Dim.1      Dim.2       Dim.3       Dim.4       Dim.5 #> 100m        -0.7802087  0.2474540 -0.07802294  0.15739065  0.10348090 #> Long.jump    0.7418925 -0.4073126  0.05696965 -0.10200465  0.12853454 #> Shot.put     0.6230146  0.5713999  0.28623659  0.22239225 -0.02547125 #> High.jump    0.5704197  0.4191676 -0.24210464  0.09178538  0.63728214 #> 400m        -0.6756524  0.4720254  0.12379407  0.12444012 -0.02216888 #> 110m.hurdle -0.7510101  0.2498147  0.23834558 -0.06295776  0.22508937 # Get variable cos2 with FactoMineR head(res_pca$var$cos2) #>                 Dim.1      Dim.2       Dim.3       Dim.4        Dim.5 #> 100m        0.6087256 0.06123346 0.006087579 0.024771818 0.0107082970 #> Long.jump   0.5504045 0.16590352 0.003245541 0.010404949 0.0165211277 #> Shot.put    0.3881471 0.32649781 0.081931386 0.049458311 0.0006487846 #> High.jump   0.3253787 0.17570146 0.058614658 0.008424556 0.4061285259 #> 400m        0.4565061 0.22280802 0.015324971 0.015485343 0.0004914592 #> 110m.hurdle 0.5640162 0.06240739 0.056808617 0.003963679 0.0506652236 # Get variable cos2 with FactoMineR2 var_cos2 <- pca_var_cos2(var_coords) head(var_cos2[,1:5]) #>                 Dim.1      Dim.2       Dim.3       Dim.4        Dim.5 #> 100m        0.6087256 0.06123346 0.006087579 0.024771818 0.0107082970 #> Long.jump   0.5504045 0.16590352 0.003245541 0.010404949 0.0165211277 #> Shot.put    0.3881471 0.32649781 0.081931386 0.049458311 0.0006487846 #> High.jump   0.3253787 0.17570146 0.058614658 0.008424556 0.4061285259 #> 400m        0.4565061 0.22280802 0.015324971 0.015485343 0.0004914592 #> 110m.hurdle 0.5640162 0.06240739 0.056808617 0.003963679 0.0506652236 # Get variable contributions with FactoMineR head(res_pca$var$contrib) #>                Dim.1     Dim.2     Dim.3     Dim.4       Dim.5 #> 100m        18.54882  3.624649 0.5716623 2.8895531  1.68654464 #> Long.jump   16.77169  9.820481 0.3047769 1.2137039  2.60205888 #> Shot.put    11.82745 19.326688 7.6938764 5.7691535  0.10218284 #> High.jump    9.91480 10.400459 5.5042879 0.9826975 63.96478233 #> 400m        13.91046 13.188882 1.4391119 1.8063156  0.07740427 #> 110m.hurdle 17.18646  3.694139 5.3346892 0.4623504  7.97971527 # Get variable contributions with FactoMineR2 var_contrib <- pca_var_contrib(var_cos2) head(var_contrib[,1:5]) #>                Dim.1     Dim.2     Dim.3     Dim.4       Dim.5 #> 100m        18.54882  3.624649 0.5716623 2.8895531  1.68654464 #> Long.jump   16.77169  9.820481 0.3047769 1.2137039  2.60205888 #> Shot.put    11.82745 19.326688 7.6938764 5.7691535  0.10218284 #> High.jump    9.91480 10.400459 5.5042879 0.9826975 63.96478233 #> 400m        13.91046 13.188882 1.4391119 1.8063156  0.07740427 #> 110m.hurdle 17.18646  3.694139 5.3346892 0.4623504  7.97971527"},{"path":"https://alexym1.github.io/FactoMineR2/articles/Comparison.html","id":"supplementary-variables","dir":"Articles","previous_headings":"PCA","what":"Supplementary variables","title":"Comparison with FactoMineR","text":"","code":"# Get supplementary variables coordinates with FactoMineR res_pca$quanti.sup$coord #>             Dim.1     Dim.2     Dim.3     Dim.4      Dim.5 #> 1500m -0.05231146 0.1142921 0.1396336 0.4621371 -0.1964609 # Get supplementary CONTINUOUS variables coordinates with FactoMineR2 X_sup <- X[-1, 10, drop = FALSE] X_sup_scaled <- standardize(X_sup, scale = TRUE)  var_sup_coords <- t(X_sup_scaled * weights) %*% eigs$U var_sup_coords[,1:5] #> [1] -0.05231146  0.11429210  0.13963364  0.46213713 -0.19646090 # Get supplementary variables cos2 with FactoMineR res_pca$quanti.sup$cos2 #>             Dim.1      Dim.2      Dim.3     Dim.4      Dim.5 #> 1500m 0.002736489 0.01306268 0.01949755 0.2135707 0.03859689 # Get supplementary variables cos2 with FactoMineR2 var_sup_cos2 <- pca_var_cos2(var_sup_coords) var_sup_cos2[,1:5] #> [1] 0.002736489 0.013062684 0.019497553 0.213570730 0.038596885"},{"path":"https://alexym1.github.io/FactoMineR2/articles/FactoMineR2.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Introduction to FactoMineR2","text":"R package FactoMineR2 designed multivariate data analysis. offers wide array statistical techniques exploratory data analysis, including principal component analysis (PCA). FactoMineR2 user-friendly provides comprehensive tools visualizing interpreting complex data structures, making valuable resource researchers data analysts.","code":"library(FactoMineR2) X <- iris[,1:4] head(X) #>   Sepal.Length Sepal.Width Petal.Length Petal.Width #> 1          5.1         3.5          1.4         0.2 #> 2          4.9         3.0          1.4         0.2 #> 3          4.7         3.2          1.3         0.2 #> 4          4.6         3.1          1.5         0.2 #> 5          5.0         3.6          1.4         0.2 #> 6          5.4         3.9          1.7         0.4"},{"path":"https://alexym1.github.io/FactoMineR2/articles/FactoMineR2.html","id":"standardize-the-dataset","dir":"Articles","previous_headings":"","what":"Standardize the dataset","title":"Introduction to FactoMineR2","text":"performing PCA, important standardize dataset. ensures variables scale, necessary accurate results. example, dataset standardized subtracting mean dividing standard deviation. (X−X‾)/σ (X - \\bar{X}) / \\sigma","code":"X_scaled <- standardize_norm(X, center = TRUE, scale = TRUE) head(X_scaled) #>      Sepal.Length Sepal.Width Petal.Length Petal.Width #> [1,]   -0.8976739  1.01560199    -1.335752   -1.311052 #> [2,]   -1.1392005 -0.13153881    -1.335752   -1.311052 #> [3,]   -1.3807271  0.32731751    -1.392399   -1.311052 #> [4,]   -1.5014904  0.09788935    -1.279104   -1.311052 #> [5,]   -1.0184372  1.24503015    -1.335752   -1.311052 #> [6,]   -0.5353840  1.93331463    -1.165809   -1.048667"},{"path":"https://alexym1.github.io/FactoMineR2/articles/FactoMineR2.html","id":"compute-eigenvalues","dir":"Articles","previous_headings":"","what":"Compute eigenvalues","title":"Introduction to FactoMineR2","text":"next step compute eigenvalues eigenvectors covariance matrix. done using get_eigen() function R. eigenvalues represent variance explained principal component, eigenvectors represent direction principal components original feature space.","code":"# You can also use the `get_eigen()`. covariance <- cov(X_scaled) eigs <- eigen(covariance) eigs$values #> [1] 2.91849782 0.91403047 0.14675688 0.02071484 eigs$vectors #>            [,1]        [,2]       [,3]       [,4] #> [1,]  0.5210659 -0.37741762  0.7195664  0.2612863 #> [2,] -0.2693474 -0.92329566 -0.2443818 -0.1235096 #> [3,]  0.5804131 -0.02449161 -0.1421264 -0.8014492 #> [4,]  0.5648565 -0.06694199 -0.6342727  0.5235971"},{"path":"https://alexym1.github.io/FactoMineR2/articles/FactoMineR2.html","id":"perform-pca","dir":"Articles","previous_headings":"","what":"Perform PCA","title":"Introduction to FactoMineR2","text":"Finally, can perform principal component analysis (PCA) standardized dataset. reduce dimensionality data identify principal components explain variance.","code":"# You can also use the `pca_ind_coords()` function. ind_coords <- -1 * as.matrix(X_scaled) %*% eigs$vectors head(ind_coords) #>          [,1]       [,2]        [,3]         [,4] #> [1,] 2.257141  0.4784238 -0.12727962 -0.024087508 #> [2,] 2.074013 -0.6718827 -0.23382552 -0.102662845 #> [3,] 2.356335 -0.3407664  0.04405390 -0.028282305 #> [4,] 2.291707 -0.5953999  0.09098530  0.065735340 #> [5,] 2.381863  0.6446757  0.01568565  0.035802870 #> [6,] 2.068701  1.4842053  0.02687825 -0.006586116"},{"path":"https://alexym1.github.io/FactoMineR2/articles/extensions.html","id":"data-preparation","dir":"Articles","previous_headings":"","what":"Data preparation","title":"Data visualization with factoextra","text":"","code":"X <- decathlon[,-c(11:13)] res_pca <- facto_pca(X, ncp = 5, quanti_sup = 10)"},{"path":"https://alexym1.github.io/FactoMineR2/articles/extensions.html","id":"eigs","dir":"Articles","previous_headings":"","what":"Eigs","title":"Data visualization with factoextra","text":"","code":"fviz_eig(res_pca)"},{"path":"https://alexym1.github.io/FactoMineR2/articles/extensions.html","id":"individuals","dir":"Articles","previous_headings":"","what":"Individuals","title":"Data visualization with factoextra","text":"","code":"fviz_pca_ind(res_pca)"},{"path":"https://alexym1.github.io/FactoMineR2/articles/extensions.html","id":"variables","dir":"Articles","previous_headings":"","what":"Variables","title":"Data visualization with factoextra","text":"","code":"fviz_pca_var(res_pca)"},{"path":"https://alexym1.github.io/FactoMineR2/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alex Martinez. Author, maintainer.","code":""},{"path":"https://alexym1.github.io/FactoMineR2/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Martinez (2024). FactoMineR2: Multivariate exploratory data analysis R. R package version 0.2.1, https://alexym1.github.io/FactoMineR2, https://github.com/alexym1/FactoMineR2.","code":"@Manual{,   title = {FactoMineR2: Multivariate exploratory data analysis in R},   author = {Alex Martinez},   year = {2024},   note = {R package version 0.2.1, https://alexym1.github.io/FactoMineR2},   url = {https://github.com/alexym1/FactoMineR2}, }"},{"path":"https://alexym1.github.io/FactoMineR2/index.html","id":"factominer2-","dir":"","previous_headings":"","what":"Multivariate exploratory data analysis in R","title":"Multivariate exploratory data analysis in R","text":"Multivariate exploratory data analysis R","code":""},{"path":"https://alexym1.github.io/FactoMineR2/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Multivariate exploratory data analysis in R","text":"FactoMineR2 ground-rewrite FactoMineR provides set functions multivariate exploratory data analysis. designed user-friendly version FactoMineR. main goal make package intuitive easier use. package still development, functions yet implemented. However, main functions already available.","code":""},{"path":"https://alexym1.github.io/FactoMineR2/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Multivariate exploratory data analysis in R","text":"latest version can installed GitHub follows:","code":"install.packages(\"devtools\") devtools::install_github(\"alexym1/FactoMineR2\")"},{"path":"https://alexym1.github.io/FactoMineR2/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Multivariate exploratory data analysis in R","text":"","code":"library(FactoMineR2)  # Get active individuals X_active <- iris[,-5] |> standardize_norm() X_active |> head() #>      Sepal.Length Sepal.Width Petal.Length Petal.Width #> [1,]   -0.8976739  1.01560199    -1.335752   -1.311052 #> [2,]   -1.1392005 -0.13153881    -1.335752   -1.311052 #> [3,]   -1.3807271  0.32731751    -1.392399   -1.311052 #> [4,]   -1.5014904  0.09788935    -1.279104   -1.311052 #> [5,]   -1.0184372  1.24503015    -1.335752   -1.311052 #> [6,]   -0.5353840  1.93331463    -1.165809   -1.048667 # Get eigs eigs <- X_active |> get_eigen() print(eigs) #> eigen() decomposition #> $values #> [1] 2.91849782 0.91403047 0.14675688 0.02071484 #>  #> $vectors #>                   Dim.1       Dim.2      Dim.3      Dim.4 #> Sepal.Length  0.5210659 -0.37741762  0.7195664  0.2612863 #> Sepal.Width  -0.2693474 -0.92329566 -0.2443818 -0.1235096 #> Petal.Length  0.5804131 -0.02449161 -0.1421264 -0.8014492 #> Petal.Width   0.5648565 -0.06694199 -0.6342727  0.5235971 # Get principal components X_active |> pca_ind_coords(eigs$vectors) |> head() #>         Dim.1      Dim.2       Dim.3        Dim.4 #> [1,] 2.257141  0.4784238 -0.12727962 -0.024087508 #> [2,] 2.074013 -0.6718827 -0.23382552 -0.102662845 #> [3,] 2.356335 -0.3407664  0.04405390 -0.028282305 #> [4,] 2.291707 -0.5953999  0.09098530  0.065735340 #> [5,] 2.381863  0.6446757  0.01568565  0.035802870 #> [6,] 2.068701  1.4842053  0.02687825 -0.006586116"},{"path":"https://alexym1.github.io/FactoMineR2/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of conduct","title":"Multivariate exploratory data analysis in R","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://alexym1.github.io/FactoMineR2/reference/facto_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform PCA with FactoMineR's style — facto_pca","title":"Perform PCA with FactoMineR's style — facto_pca","text":"Return PCA results FactoMineR's style","code":""},{"path":"https://alexym1.github.io/FactoMineR2/reference/facto_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform PCA with FactoMineR's style — facto_pca","text":"","code":"facto_pca(X, ncp = 5, scale.unit = TRUE, ind_sup = NULL, quanti_sup = NULL)"},{"path":"https://alexym1.github.io/FactoMineR2/reference/facto_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform PCA with FactoMineR's style — facto_pca","text":"X data frame n rows (individuals) p columns (numeric variables) ncp integer, number components keep (value set default) scale.unit boolean, TRUE (value set default) data scaled unit variance ind_sup vector indicating indexes supplementary individuals quanti_sup vector indicating indexes quantitative supplementary variables","code":""},{"path":"https://alexym1.github.io/FactoMineR2/reference/facto_pca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform PCA with FactoMineR's style — facto_pca","text":"","code":"library(FactoMineR) library(FactoMineR2) data(decathlon)  X <- decathlon[, -c(11:13)] res <- facto_pca(X, ncp = 5, ind_sup = 1, quanti_sup = 10)"},{"path":"https://alexym1.github.io/FactoMineR2/reference/get_eigen.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute eigvalues and eigvectors — get_eigen","title":"Compute eigvalues and eigvectors — get_eigen","text":"Return eigvalues eigvectors matrix","code":""},{"path":"https://alexym1.github.io/FactoMineR2/reference/get_eigen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute eigvalues and eigvectors — get_eigen","text":"","code":"get_eigen(X)  get_weighted_eigen(X)"},{"path":"https://alexym1.github.io/FactoMineR2/reference/get_eigen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute eigvalues and eigvectors — get_eigen","text":"X X_active","code":""},{"path":"https://alexym1.github.io/FactoMineR2/reference/get_eigen.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute eigvalues and eigvectors — get_eigen","text":"Standardization depends need perform factor analysis. implemented two types: get_weighted_eigen: default method FactoMineR compute eigvalues, eigvectors. get_eigen: standard method compute eigvalues, eigvectors.","code":""},{"path":"https://alexym1.github.io/FactoMineR2/reference/get_eigen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute eigvalues and eigvectors — get_eigen","text":"","code":"library(FactoMineR2)  iris[, -5] |>   standardize_norm() |>   get_eigen() #> eigen() decomposition #> $values #> [1] 2.91849782 0.91403047 0.14675688 0.02071484 #>  #> $vectors #>                   Dim.1       Dim.2      Dim.3      Dim.4 #> Sepal.Length  0.5210659 -0.37741762  0.7195664  0.2612863 #> Sepal.Width  -0.2693474 -0.92329566 -0.2443818 -0.1235096 #> Petal.Length  0.5804131 -0.02449161 -0.1421264 -0.8014492 #> Petal.Width   0.5648565 -0.06694199 -0.6342727  0.5235971 #>"},{"path":"https://alexym1.github.io/FactoMineR2/reference/pca_ind_contrib.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute individual contributions — pca_ind_contrib","title":"Compute individual contributions — pca_ind_contrib","text":"Return indivdual contributions principal component","code":""},{"path":"https://alexym1.github.io/FactoMineR2/reference/pca_ind_contrib.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute individual contributions — pca_ind_contrib","text":"","code":"pca_ind_contrib(ind_coords, eigenvalues)"},{"path":"https://alexym1.github.io/FactoMineR2/reference/pca_ind_contrib.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute individual contributions — pca_ind_contrib","text":"ind_coords individual coordinates eigenvalues eigenvalues","code":""},{"path":"https://alexym1.github.io/FactoMineR2/reference/pca_ind_contrib.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute individual contributions — pca_ind_contrib","text":"","code":"library(FactoMineR2)  X_active <- iris[, -5] |>   standardize_norm()  eigs <- X_active |>   get_eigen()  X_active |>   pca_ind_coords(eigs$vectors) |>   pca_ind_contrib(eigs$values) |>   head() #>          Dim.1      Dim.2       Dim.3       Dim.4 #> [1,] 1.1637691 0.16694510 0.073591567 0.018672867 #> [2,] 0.9825900 0.32925696 0.248367113 0.339198420 #> [3,] 1.2683043 0.08469576 0.008816151 0.025742863 #> [4,] 1.1996857 0.25856249 0.037605617 0.139067312 #> [5,] 1.2959338 0.30313118 0.001117674 0.041253702 #> [6,] 0.9775628 1.60670454 0.003281801 0.001396002"},{"path":"https://alexym1.github.io/FactoMineR2/reference/pca_ind_coords.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute coordinates for individuals — pca_ind_coords","title":"Compute coordinates for individuals — pca_ind_coords","text":"Return principal component individuals","code":""},{"path":"https://alexym1.github.io/FactoMineR2/reference/pca_ind_coords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute coordinates for individuals — pca_ind_coords","text":"","code":"pca_ind_coords(X, eigenvectors)"},{"path":"https://alexym1.github.io/FactoMineR2/reference/pca_ind_coords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute coordinates for individuals — pca_ind_coords","text":"X X_active eigenvectors eigenvectors","code":""},{"path":"https://alexym1.github.io/FactoMineR2/reference/pca_ind_coords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute coordinates for individuals — pca_ind_coords","text":"","code":"library(FactoMineR2)  X_active <- iris[, -5] |>   standardize_norm()  eigs <- X_active |>   get_eigen()  X_active |>   pca_ind_coords(eigs$vectors) |>   head() #>          Dim.1      Dim.2       Dim.3        Dim.4 #> [1,] -2.257141 -0.4784238  0.12727962  0.024087508 #> [2,] -2.074013  0.6718827  0.23382552  0.102662845 #> [3,] -2.356335  0.3407664 -0.04405390  0.028282305 #> [4,] -2.291707  0.5953999 -0.09098530 -0.065735340 #> [5,] -2.381863 -0.6446757 -0.01568565 -0.035802870 #> [6,] -2.068701 -1.4842053 -0.02687825  0.006586116"},{"path":"https://alexym1.github.io/FactoMineR2/reference/pca_ind_cos2.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute individual squared cosines — pca_ind_cos2","title":"Compute individual squared cosines — pca_ind_cos2","text":"Return indivdual squared cosines principal component","code":""},{"path":"https://alexym1.github.io/FactoMineR2/reference/pca_ind_cos2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute individual squared cosines — pca_ind_cos2","text":"","code":"pca_ind_cos2(ind_coords)"},{"path":"https://alexym1.github.io/FactoMineR2/reference/pca_ind_cos2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute individual squared cosines — pca_ind_cos2","text":"ind_coords individual coordinates","code":""},{"path":"https://alexym1.github.io/FactoMineR2/reference/pca_ind_cos2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute individual squared cosines — pca_ind_cos2","text":"","code":"library(FactoMineR2)  X_active <- iris[, -5] |>   standardize_norm()  eigs <- X_active |>   get_eigen()  X_active |>   pca_ind_coords(eigs$vectors) |>   pca_ind_cos2() |>   head() #>          Dim.1      Dim.2        Dim.3        Dim.4 #> [1,] 0.9539975 0.04286032 0.0030335249 1.086460e-04 #> [2,] 0.8927725 0.09369248 0.0113475382 2.187482e-03 #> [3,] 0.9790410 0.02047578 0.0003422122 1.410446e-04 #> [4,] 0.9346682 0.06308947 0.0014732682 7.690193e-04 #> [5,] 0.9315095 0.06823959 0.0000403979 2.104697e-04 #> [6,] 0.6600989 0.33978301 0.0001114335 6.690714e-06"},{"path":"https://alexym1.github.io/FactoMineR2/reference/pca_var_contrib.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute variable contributions — pca_var_contrib","title":"Compute variable contributions — pca_var_contrib","text":"Return variable contributions","code":""},{"path":"https://alexym1.github.io/FactoMineR2/reference/pca_var_contrib.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute variable contributions — pca_var_contrib","text":"","code":"pca_var_contrib(var_cos2)"},{"path":"https://alexym1.github.io/FactoMineR2/reference/pca_var_contrib.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute variable contributions — pca_var_contrib","text":"var_cos2 variable coordinates","code":""},{"path":"https://alexym1.github.io/FactoMineR2/reference/pca_var_contrib.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute variable contributions — pca_var_contrib","text":"","code":"library(FactoMineR2)  X_active <- iris[, -5] |>   standardize_norm()  eigs <- X_active |>   get_eigen()  eigs$values |>   pca_var_coords(eigs$vectors) |>   pca_var_cos2() |>   pca_var_contrib() |>   head() #>                  Dim.1       Dim.2     Dim.3     Dim.4 #> Sepal.Length 27.150969 14.24440565 51.777574  6.827052 #> Sepal.Width   7.254804 85.24748749  5.972245  1.525463 #> Petal.Length 33.687936  0.05998389  2.019990 64.232089 #> Petal.Width  31.906291  0.44812296 40.230191 27.415396"},{"path":"https://alexym1.github.io/FactoMineR2/reference/pca_var_coords.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute variable coordinates — pca_var_coords","title":"Compute variable coordinates — pca_var_coords","text":"Return variable coordinates","code":""},{"path":"https://alexym1.github.io/FactoMineR2/reference/pca_var_coords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute variable coordinates — pca_var_coords","text":"","code":"pca_var_coords(eigenvalues, eigenvectors)  pca_var_cor(eigenvalues, eigenvectors)"},{"path":"https://alexym1.github.io/FactoMineR2/reference/pca_var_coords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute variable coordinates — pca_var_coords","text":"eigenvalues eigenvalues eigenvectors eigenvectors","code":""},{"path":"https://alexym1.github.io/FactoMineR2/reference/pca_var_coords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute variable coordinates — pca_var_coords","text":"","code":"library(FactoMineR2)  X_active <- iris[, -5] |>   standardize_norm()  eigs <- X_active |>   get_eigen()  eigs$values |>   pca_var_coords(eigs$vectors) |>   head() #>                   Dim.1       Dim.2       Dim.3       Dim.4 #> Sepal.Length  0.8901688 -0.36082989  0.27565767  0.03760602 #> Sepal.Width  -0.4601427 -0.88271627 -0.09361987 -0.01777631 #> Petal.Length  0.9915552 -0.02341519 -0.05444699 -0.11534978 #> Petal.Width   0.9649790 -0.06399985 -0.24298265  0.07535950"},{"path":"https://alexym1.github.io/FactoMineR2/reference/pca_var_cos2.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute variable squared cosines — pca_var_cos2","title":"Compute variable squared cosines — pca_var_cos2","text":"Return variable squared cosines","code":""},{"path":"https://alexym1.github.io/FactoMineR2/reference/pca_var_cos2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute variable squared cosines — pca_var_cos2","text":"","code":"pca_var_cos2(var_coords)"},{"path":"https://alexym1.github.io/FactoMineR2/reference/pca_var_cos2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute variable squared cosines — pca_var_cos2","text":"var_coords variable coordinates","code":""},{"path":"https://alexym1.github.io/FactoMineR2/reference/pca_var_cos2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute variable squared cosines — pca_var_cos2","text":"","code":"library(FactoMineR2)  X_active <- iris[, -5] |>   standardize_norm()  eigs <- X_active |>   get_eigen()  eigs$values |>   pca_var_coords(eigs$vectors) |>   pca_var_cos2() |>   head() #>                  Dim.1       Dim.2       Dim.3        Dim.4 #> Sepal.Length 0.7924004 0.130198208 0.075987149 0.0014142127 #> Sepal.Width  0.2117313 0.779188012 0.008764681 0.0003159971 #> Petal.Length 0.9831817 0.000548271 0.002964475 0.0133055723 #> Petal.Width  0.9311844 0.004095980 0.059040571 0.0056790544"},{"path":"https://alexym1.github.io/FactoMineR2/reference/standardize_norm.html","id":null,"dir":"Reference","previous_headings":"","what":"Data standardization — standardize_norm","title":"Data standardization — standardize_norm","text":"Perform data standardization multivariate exploratory data analysis.","code":""},{"path":"https://alexym1.github.io/FactoMineR2/reference/standardize_norm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data standardization — standardize_norm","text":"","code":"standardize_norm(X, center = TRUE, scale = TRUE)  standardize(X, scale = TRUE)"},{"path":"https://alexym1.github.io/FactoMineR2/reference/standardize_norm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data standardization — standardize_norm","text":"X matrix center centering mean scale scaling standard deviation","code":""},{"path":"https://alexym1.github.io/FactoMineR2/reference/standardize_norm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data standardization — standardize_norm","text":"Standardization depends need perform factor analysis. implemented two types: standardize: standardization performed centering data matrix dividing square root sum squares weights. default standardization FactoMineR::PCA(). standardize_norm: standardization performed centering scaling data matrix. (X - µ) / σ, µ mean σ standard deviation.","code":""},{"path":"https://alexym1.github.io/FactoMineR2/reference/standardize_norm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data standardization — standardize_norm","text":"","code":"library(FactoMineR2)  iris[, -5] |>   standardize_norm() |>   head() #>      Sepal.Length Sepal.Width Petal.Length Petal.Width #> [1,]   -0.8976739  1.01560199    -1.335752   -1.311052 #> [2,]   -1.1392005 -0.13153881    -1.335752   -1.311052 #> [3,]   -1.3807271  0.32731751    -1.392399   -1.311052 #> [4,]   -1.5014904  0.09788935    -1.279104   -1.311052 #> [5,]   -1.0184372  1.24503015    -1.335752   -1.311052 #> [6,]   -0.5353840  1.93331463    -1.165809   -1.048667"},{"path":"https://alexym1.github.io/FactoMineR2/news/index.html","id":"factominer2-021","dir":"Changelog","previous_headings":"","what":"FactoMineR2 0.2.1","title":"FactoMineR2 0.2.1","text":"get_weighted_eigen() now returns U matrix expected (#4) pca_ind_coords() & pca_var_coords() return signs corresponding coordinates FactoMineR. facto_pca() updated. Now, returns output FactoMineR::PCA().","code":""},{"path":"https://alexym1.github.io/FactoMineR2/news/index.html","id":"factominer2-020","dir":"Changelog","previous_headings":"","what":"FactoMineR2 0.2.0","title":"FactoMineR2 0.2.0","text":"facto_pca() wrapper function mimics FactoMineR::PCA(). get_weighted_eigen() calculates eigs FactoMineR, whereas get_eigen() calculates eigs unweighted case. eigvalues() eigvectors() deprecated. pca_var_cos2() now works expected. Comparison.Rmd updated allowing compute either supplementary individual coordinates supplementary variable coordinates.","code":""},{"path":"https://alexym1.github.io/FactoMineR2/news/index.html","id":"factominer2-011","dir":"Changelog","previous_headings":"","what":"FactoMineR2 0.1.1","title":"FactoMineR2 0.1.1","text":"standardize() now works expected scale = FALSE (#1) new argument called weights added get_eigen(), eigvalues() eigvectors() functions. argument allows weight variables PCA. standardize_norm() replaced standardize(type = \"norm\", ...) Codecov badge fixed now use master instead main branch coding coverage.","code":""},{"path":"https://alexym1.github.io/FactoMineR2/news/index.html","id":"factominer2-010","dir":"Changelog","previous_headings":"","what":"FactoMineR2 0.1.0","title":"FactoMineR2 0.1.0","text":"get_eig() wrapper function returns eigenvalues eigenvectors. standardize() wrapper function standardizes data. pca_ind_*() allows compute coordinates, cos2 contribution active individuals PCA. pca_var_*() allows compute coordinates, cos2 contribution active variables PCA. Unit tests designed functions mentioned . Website built deployed using pkgdown.","code":""}]
